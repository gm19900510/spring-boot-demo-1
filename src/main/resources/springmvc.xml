<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.test.controller,com.test.config" />
    <!--AOP有了这个Spring就能够自动扫描被@Aspect标注的切面-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--允许访问静态资源-->
    <!--<mvc:default-servlet-handler/>-->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
    <mvc:resources mapping="/views/**" location="/views" />
    <mvc:resources mapping="/res/**" location="/res/" />
    <mvc:resources mapping="/dist/**" location="/dist/" />
    <mvc:resources mapping="/web/**" location="/web/" />
    <!--开启注解以及对@reponsebody支持-->
    <mvc:annotation-driven>
        <mvc:message-converters><!-- register-defaults="true"-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="fastJsonConfig" ref="fastJsonConfig"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <bean id="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <property name="charset" value="UTF-8" />
        <property name="serializerFeatures">
            <list>
                <!--输出key时是否使用双引号,默认为true-->
                <value>QuoteFieldNames</value>
                <!--是否输出值为null的字段,默认为false-->
                <value>WriteMapNullValue</value>
                <!--数值字段如果为null,输出为0,而非null-->
                <value>WriteNullNumberAsZero</value>
                <!--List字段如果为null,输出为[],而非null-->
                <value>WriteNullListAsEmpty</value>
                <!--字符类型字段如果为null,输出为”“,而非null-->
                <value>WriteNullStringAsEmpty</value>
                <!--Boolean字段如果为null,输出为false,而非null-->
                <value>WriteNullBooleanAsFalse</value>
            </list>
        </property>
        <property name="serializeConfig">
            <bean class="com.alibaba.fastjson.serializer.SerializeConfig">
                <property name="propertyNamingStrategy" value="SnakeCase"></property>
            </bean>
        </property>
    </bean>
    <!-- 默认访问跳转到登录页面(即定义无需Controller的url<->view直接映射) -->
    <!--<mvc:view-controller path="/" view-name="forward:/login.jsp"/>-->

    <!--模板解析器和TemplateEngine-->
    <bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <constructor-arg ref="servletContext"/>
        <property name="prefix" value="/views"></property>
        <property name="suffix" value=".html"></property>
        <property name="templateMode" value="HTML5"></property>
        <!--是否缓存页面，开发时设置为false，这样就可以在不重启服务器的情况下刷新页面即可查看修改效果-->
        <property name="cacheable" value="false" />
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
    <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"></property>
    </bean>
    <!--视图解析器ViewResolver-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"></property>
        <property name="characterEncoding" value="UTF-8"></property>
    </bean>

</beans>
